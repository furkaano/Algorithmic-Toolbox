        -:    0:Source:D:/CLionProjects/Coursera/Data Structures and Algorithms/Algorithmic Toolbox/Week-5/Week5-Problem1/main.cpp
        -:    0:Graph:D:\CLionProjects\Coursera\Data Structures and Algorithms\Algorithmic Toolbox\Week-5\Week5-Problem1\cmake-build-debug-coverage\CMakeFiles\Week5_Problem1.dir\main.cpp.gcno
        -:    0:Data:D:\CLionProjects\Coursera\Data Structures and Algorithms\Algorithmic Toolbox\Week-5\Week5-Problem1\cmake-build-debug-coverage\CMakeFiles\Week5_Problem1.dir\main.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include <iostream>
        -:    2:#include <limits>
        -:    3:
        -:    4:using namespace std;
        -:    5:
        1:    6:int get_change(int m) {
        1:    7:    int coins[] = {1, 3, 4};
        1:    8:    int MinNumCoins[m + 1];
        1:    9:    MinNumCoins[0] = 0;
        1:   10:    int NumCoins = 0;
        -:   11:
       35:   12:    for(int i = 1; i <= m; ++i){
       35:   12-block  0
       34:   12-block  1
       34:   13:        MinNumCoins[i] = numeric_limits<int>::infinity();
       34:   13-block  0
      102:   14:        for(int j=1; j < 3; j++){
      102:   14-block  0
       68:   14-block  1
       68:   15:            if(i >= coins[j]){
       68:   15-block  0
       63:   16:                NumCoins = MinNumCoins[i - coins[j]] + 1;
       63:   17:                if(NumCoins < MinNumCoins[i])
       63:   17-block  0
    #####:   18:                    MinNumCoins[m] = NumCoins;
    %%%%%:   18-block  0
        -:   19:            }
        -:   20:        }
        -:   21:    }
        2:   22:    return MinNumCoins[m];
        1:   22-block  0
        1:   22-block  1
        -:   23:}
        -:   24:
        1:   25:int main() {
        -:   26:    int m;
        1:   27:    cin >> m;
        1:   27-block  0
        1:   28:    cout << get_change(m) << '\n';
        1:   28-block  0
        1:   28-block  1
        1:   29:}
        1:   29-block  0
        1:   29-block  1
